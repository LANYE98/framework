<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.leapframework.org/schema/beans">

    <bean type="leap.web.api.Apis"
          class="leap.web.api.DefaultApis" primary="true"/>

    <bean type="leap.web.api.meta.ApiMetadataFactory"
          class="leap.web.api.meta.DefaultApiMetadataFactory" primary="true"/>

    <bean type="leap.web.api.meta.ApiMetadataStrategy"
          class="leap.web.api.meta.DefaultApiMetadataStrategy" primary="true"/>

    <bean name="swagger"
          type="leap.web.api.spec.ApiSpecWriter"
          class="leap.web.api.spec.swagger.SwaggerJsonWriter" primary="true"/>

    <bean name="swagger"
          type="leap.web.api.spec.ApiSpecReader"
          class="leap.web.api.spec.swagger.SwaggerSpecReader" primary="true"/>

    <!-- model -->
    <bean type="leap.web.api.orm.ModelExecutorFactory" class="leap.web.api.orm.DefaultModelExecutorFactory" primary="true"/>

    <!-- built-in oauth2 processor : only the oauth2 module exists -->
    <beans if-class-present="leap.oauth2.OAuth2Constants">
        <bean type="leap.web.api.config.ApiConfigProcessor" class="leap.web.api.security.OAuthConfigProcessor"/>
    </beans>

    <beans if-class-present="leap.web.security.SecurityConfig">
        <bean type="leap.web.api.config.ApiConfigProcessor" class="leap.web.api.security.SecurityConfigProcessor"/>
    </beans>

    <!-- built-in swagger processor -->
    <bean type="leap.web.api.config.ApiConfigProcessor" class="leap.web.api.spec.swagger.SwaggerProcessor">
        <additional-type-def type="leap.web.api.meta.ApiMetadataProcessor"/>
    </bean>
    <bean type="leap.web.api.mvc.ApiFailureHandler"
          class="leap.web.api.mvc.DefaultApiFailureHandler" primary="true"/>

    <bean type="leap.web.api.mvc.ApiErrorHandler"
          class="leap.web.api.mvc.DefaultApiErrorHandler" primary="true"/>
    <!-- operation log -->
    <bean type="leap.web.api.log.OpLogManager" class="leap.web.api.log.DefaultOpLogManager" init-method="init" primary="true"></bean>
    <bean type="leap.web.action.ActionInterceptor" class="leap.web.api.log.OpLogInterceptor"></bean>

    <!-- description loader -->
    <bean type="leap.web.api.meta.desc.ApiDescContainer" class="leap.web.api.meta.desc.DefaultApiDescContainer"/>
    <bean name="controller" type="leap.web.api.meta.desc.DescriptionLoader" class="leap.web.api.meta.desc.ControllerDescriptionLoader"/>
    <bean name="model" type="leap.web.api.meta.desc.DescriptionLoader" class="leap.web.api.meta.desc.ModelDescriptionLoader"/>

    <!-- restd -->
    <bean type="leap.web.api.restd.RestdStrategy"       class="leap.web.api.restd.DefaultRestdStrategy" primary="true"/>
    <bean type="leap.web.api.config.ApiConfigProcessor" class="leap.web.api.restd.RestdApiConfigProcessor">
        <additional-type-def type="leap.web.api.meta.ApiMetadataProcessor"/>
    </bean>

    <bean type="leap.web.api.restd.RestdProcessor" class="leap.web.api.restd.crud.QueryOperation"/>
    <bean type="leap.web.api.restd.RestdProcessor" class="leap.web.api.restd.crud.FindOperation"/>
    <bean type="leap.web.api.restd.RestdProcessor" class="leap.web.api.restd.crud.CreateOperation"/>
    <bean type="leap.web.api.restd.RestdProcessor" class="leap.web.api.restd.crud.UpdateOperation"/>
    <bean type="leap.web.api.restd.RestdProcessor" class="leap.web.api.restd.crud.DeleteOperation"/>
    <bean type="leap.web.api.restd.RestdProcessor" class="leap.web.api.restd.sql.SqlOperation"/>

</beans>