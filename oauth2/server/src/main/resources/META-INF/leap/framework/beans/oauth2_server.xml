<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.leapframework.org/schema/beans"
       if-servlet-environment="true"
       if-class-present="leap.web.security.SecurityConfig">

    <!-- config -->
    <bean type="leap.oauth2.as.OAuth2AuthzServerConfig"
          class="leap.oauth2.as.DefaultOAuth2AuthzServerConfig" primary="true">

        <additional-type-def type="leap.oauth2.as.OAuth2AuthzServerConfigurator" primary="true"/>

    </bean>

    <bean type="leap.web.AppListener" class="leap.oauth2.server.OAuth2ServerAutoConfig"/>

    <!-- store -->
    <bean type="leap.oauth2.as.store.AuthzInMemoryStore"
          class="leap.oauth2.as.store.DefaultAuthzInMemoryStore" primary="true"/>

    <bean name="jdbc"
          type="leap.oauth2.as.client.AuthzClientStore"
          class="leap.oauth2.as.store.DefaultJdbcAuthzClientStore"/>

    <bean name="jdbc"
          type="leap.oauth2.as.token.AuthzTokenStore"
          class="leap.oauth2.as.store.DefaultJdbcAuthzTokenStore"/>

    <bean name="jdbc"
          type="leap.oauth2.as.code.AuthzCodeStore"
          class="leap.oauth2.as.store.DefaultJdbcAuthzCodeStore"/>

    <bean name="jdbc"
          type="leap.oauth2.as.sso.AuthzSSOStore"
          class="leap.oauth2.as.store.DefaultJdbcAuthzSSOStore"/>

    <!-- client -->
    <bean type="leap.oauth2.as.client.AuthzClientManager"
          class="leap.oauth2.as.client.DefaultAuthzClientManager" primary="true"/>

    <bean type="leap.oauth2.as.client.AuthzClientValidator"
          class="leap.oauth2.as.client.DefaultAuthzClientValidator" primary="true"/>

    <bean type="leap.oauth2.as.client.AuthzClientAuthenticator"
          class="leap.oauth2.as.client.DefaultAuthzClientAuthenticator" primary="true"/>

    <!-- authorization code -->
    <bean type="leap.oauth2.as.code.AuthzCodeManager"
          class="leap.oauth2.as.code.DefaultAuthzCodeManager" primary="true"/>

    <bean type="leap.oauth2.as.code.AuthzCodeGenerator"
          class="leap.oauth2.as.code.UUIDAuthzCodeGenerator" primary="true"/>

    <!-- token -->
    <bean type="leap.oauth2.as.endpoint.token.GrantTokenManager"
          class="leap.oauth2.as.endpoint.token.DefaultGrantTokenManager" primary="true"/>

    <bean type="leap.oauth2.as.token.AuthzTokenManager"
          class="leap.oauth2.as.token.DefaultAuthzTokenManager" primary="true"/>

    <bean type="leap.oauth2.as.OAuth2AuthzServerErrorHandler"
          class="leap.oauth2.as.DefaultOAuth2AuthzServerErrorHandler" primary="true"/>

    <bean name="uuid"
          type="leap.oauth2.as.token.AuthzAccessTokenGenerator"
          class="leap.oauth2.as.token.UUIDAuthzTokenGenerator" primary="true">

        <additional-type-def type="leap.oauth2.as.token.AuthzRefreshTokenGenerator" name="uuid" primary="true"/>
    </bean>

    <!-- oauth2 standard endpoints -->
    <bean name="tokenEndpoint" type="leap.web.Endpoint"
          class="leap.oauth2.as.endpoint.TokenEndpoint"/>

    <bean name="authorizationEndpoint" type="leap.web.Endpoint"
          class="leap.oauth2.as.endpoint.AuthorizationEndpoint"/>

    <bean name="tokenInfoEndpoint" type="leap.web.Endpoint"
          class="leap.oauth2.as.endpoint.TokenInfoEndpoint"/>

    <!-- authorize endpoint : response types -->
    <bean name="code"
          type="leap.oauth2.as.endpoint.authorize.ResponseTypeHandler"
          class="leap.oauth2.as.endpoint.authorize.CodeResponseTypeHandler"/>

    <bean name="token"
          type="leap.oauth2.as.endpoint.authorize.ResponseTypeHandler"
          class="leap.oauth2.as.endpoint.authorize.TokenResponseTypeHandler"/>

    <!-- token endpoint : grant types -->
    <bean name="refresh_token"
          type="leap.oauth2.as.endpoint.token.GrantTypeHandler"
          class="leap.oauth2.as.endpoint.token.RefreshTokenGrantTypeHandler"/>

    <bean name="password"
          type="leap.oauth2.as.endpoint.token.GrantTypeHandler"
          class="leap.oauth2.as.endpoint.token.PasswordGrantTypeHandler"/>

    <bean name="client_credentials"
          type="leap.oauth2.as.endpoint.token.GrantTypeHandler"
          class="leap.oauth2.as.endpoint.token.ClientCredentialsGrantTypeHandler"/>

    <bean name="client_secret_basic"
          type="leap.oauth2.as.endpoint.token.GrantTypeHandler"
          class="leap.oauth2.as.endpoint.token.ClientSecretBasicGrantTypeHandler"/>

    <bean name="client_secret_post"
          type="leap.oauth2.as.endpoint.token.GrantTypeHandler"
          class="leap.oauth2.as.endpoint.token.ClientSecretPostGrantTypeHandler"/>

    <bean name="authorization_code"
          type="leap.oauth2.as.endpoint.token.GrantTypeHandler"
          class="leap.oauth2.as.endpoint.token.CodeGrantTypeHandler"/>

    <!-- token info endpoint : handlers -->
    <bean type="leap.oauth2.as.endpoint.tokeninfo.TokenInfoHandler"
          class="leap.oauth2.as.endpoint.tokeninfo.DefaultTokenInfoHandler"/>

    <bean name="default" type="leap.oauth2.as.endpoint.tokeninfo.TokenInfoResponseHandler"
          class="leap.oauth2.as.endpoint.tokeninfo.DefaultTokenInfoResponseHandler"/>

    <!-- logout endpoint : handlers -->
    <bean type="leap.oauth2.as.endpoint.logout.PostLogoutHandler"
          class="leap.oauth2.as.endpoint.logout.DefaultPostLogoutHandler" primary="true"/>

    <!-- openid connect : common -->
    <bean type="leap.oauth2.as.openid.IdTokenGenerator"
          class="leap.oauth2.as.openid.JwtIdTokenGenerator" primary="true"/>

    <!-- open id connect : logout endpoint -->
    <bean name="logoutEndpoint" type="leap.web.Endpoint"
          class="leap.oauth2.as.endpoint.LogoutEndpoint"/>

    <!-- open id connect : authorization endpoint extension -->
    <bean name="id_token"
          type="leap.oauth2.as.endpoint.authorize.ResponseTypeHandler"
          class="leap.oauth2.as.endpoint.authorize.IdTokenResponseTypeHandler"/>

    <bean name="code id_token"
          type="leap.oauth2.as.endpoint.authorize.ResponseTypeHandler"
          class="leap.oauth2.as.endpoint.authorize.CodeIdTokenResponseTypeHandler"/>

    <bean name="id_token token"
          type="leap.oauth2.as.endpoint.authorize.ResponseTypeHandler"
          class="leap.oauth2.as.endpoint.authorize.IdTokenTokenResponseTypeHandler"/>

    <!-- sso -->
    <bean type="leap.oauth2.as.sso.AuthzSSOManager" class="leap.oauth2.as.sso.DefaultAuthzSSOManager" primary="true"/>

    <!-- userinfo endpoint: -->
    <bean name="userInfoEndpoint" type="leap.web.Endpoint"
          class="leap.oauth2.as.endpoint.UserInfoEndpoint"/>

    <!-- userinfo endpoint : handlers -->
    <bean name="userInfoHandler" type="leap.oauth2.as.endpoint.userinfo.UserInfoHandler"
          class="leap.oauth2.as.endpoint.userinfo.DefaultUserInfoHandler"/>

    <!-- AuthzAuthentication Manager  -->
    <bean type="leap.oauth2.as.authc.AuthzAuthenticationManager"
          class="leap.oauth2.as.authc.DefaultAuthzAuthenticationManager" primary="true"/>

</beans>